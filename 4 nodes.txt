Implement a point to point network with four nodes and duplex links between them analyze the network performance by setting the queue size and varying the band width

set ns [new Simulator]                                            #create a new simulator object

set nf [open "pa1.nam" w] 
$ns namtrace-all $nf                                             #open the nam trace file

set tf [open "pa1.tr" w]
$ns trace-all $tf

proc finish {} {                                                   #define a ‘finish’ procedure  
global ns nf tf
$ns flush-trace
close $nf                                                                 #close the trace file
close $tf
exec nam pa1.nam &
exit 
}
set n0 [$ns node]                                         #create four nodes
set n1 [$ns node]
set n2 [$ns node]
set n3 [$ns node]

$n0 label "UDP0 Source"     
$n1 label "UDP1 Source"
$n3 label "Null"

$ns duplex-link $n0 $n2 1Mb 10ms  DropTail         # create a duplex link between the nodes
$ns duplex-link $n1 $n2 1Mb 5ms  DropTail
$ns duplex-link $n2 $n3 1.4Mb 10ms  DropTail

$ns duplex-link-op $n2 $n3 color "green"
$ns duplex-link-op $n2 $n3 queuePos 3

$ns queue-limit  $n0 $n2 5
$ns queue-limit  $n1 $n2 5
$ns queue-limit  $n2 $n3 20
          set udp0 [new Agent/UDP]            	# attaching transport layer protocols	
		

$ns attach-agent $n0 $udp0
set cbr0 [new Application/Traffic/CBR]     # attaching application layer protocols

$cbr0 set packetSize_ 500
$cbr0 set interval_ 0.005
$cbr0 attach-agent $udp0

set udp1 [new Agent/UDP]
$ns attach-agent $n1 $udp1

set cbr1 [new Application/Traffic/CBR]
$cbr1 set packetSize_ 500
$cbr1 set interval_ 0.005
$cbr1 attach-agent $udp1

set udp2 [new Agent/UDP]
$ns attach-agent $n2 $udp2

set cbr2 [new Application/Traffic/CBR]
$cbr2  attach-agent $udp2

set null0 [new Agent/Null]                                           # creating sink(destination) node
$ns attach-agent $n3 $null0

$ns connect $udp0 $null0
$ns connect $udp1 $null0

$ns at 0.1 "$cbr0 start"
$ns at 0.2 "$cbr1 start"
$ns at 1.0 "finish"

$ns run


BEGIN {
c=0;
}
{
if ($1=="d")
{
c++;
printf("%s\t%s\n",$5,$11);
}
}
END{
printf("The number of packet dropped= %d\n",c);
}
